// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: Common.proto

package GateWayProtos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务类型
type ServiceType int32

const (
	ServiceType_SERVICE_TYPE_NONE     ServiceType = 0
	ServiceType_REGISTER_CENTER       ServiceType = 6000 // 注册中心, Port = 6000
	ServiceType_SERVICE_ALGO_GATE_WAY ServiceType = 9080 // 算法网关
	ServiceType_SERVICE_ALGO_CENTER   ServiceType = 9090 // 算法中控
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0:    "SERVICE_TYPE_NONE",
		6000: "REGISTER_CENTER",
		9080: "SERVICE_ALGO_GATE_WAY",
		9090: "SERVICE_ALGO_CENTER",
	}
	ServiceType_value = map[string]int32{
		"SERVICE_TYPE_NONE":     0,
		"REGISTER_CENTER":       6000,
		"SERVICE_ALGO_GATE_WAY": 9080,
		"SERVICE_ALGO_CENTER":   9090,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

// 服务接口
type CmdType int32

const (
	CmdType_CMD_NONE CmdType = 0
	// 注册中心
	CmdType_CMD_REGISTER CmdType = 10  // 注册
	CmdType_CMD_ONLINE   CmdType = 20  // 上线
	CmdType_CMD_OFFLINE  CmdType = 30  // 下线
	CmdType_CMD_PING     CmdType = 40  // 心跳
	CmdType_CMD_CHECK    CmdType = 50  // 校验
	CmdType_CMD_RELOAD   CmdType = 60  // 更新推送
	CmdType_CMD_NOTIFY   CmdType = 70  // 通知协议
	CmdType_CMD_HELLO    CmdType = 100 // Hello协议
	// 算法中控
	CmdType_CMD_GET_DOWNLOAD_RECOMMEND CmdType = 908001 // 买了又买推荐
)

// Enum value maps for CmdType.
var (
	CmdType_name = map[int32]string{
		0:      "CMD_NONE",
		10:     "CMD_REGISTER",
		20:     "CMD_ONLINE",
		30:     "CMD_OFFLINE",
		40:     "CMD_PING",
		50:     "CMD_CHECK",
		60:     "CMD_RELOAD",
		70:     "CMD_NOTIFY",
		100:    "CMD_HELLO",
		908001: "CMD_GET_DOWNLOAD_RECOMMEND",
	}
	CmdType_value = map[string]int32{
		"CMD_NONE":                   0,
		"CMD_REGISTER":               10,
		"CMD_ONLINE":                 20,
		"CMD_OFFLINE":                30,
		"CMD_PING":                   40,
		"CMD_CHECK":                  50,
		"CMD_RELOAD":                 60,
		"CMD_NOTIFY":                 70,
		"CMD_HELLO":                  100,
		"CMD_GET_DOWNLOAD_RECOMMEND": 908001,
	}
)

func (x CmdType) Enum() *CmdType {
	p := new(CmdType)
	*p = x
	return p
}

func (x CmdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CmdType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[1].Descriptor()
}

func (CmdType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[1]
}

func (x CmdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CmdType.Descriptor instead.
func (CmdType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

// 错误码定义
type ResultType int32

const (
	ResultType_OK                  ResultType = 0
	ResultType_ERR_Unknown         ResultType = 1  // 未知错误
	ResultType_ERR_Service_CMD     ResultType = 2  // 没有可用的grpc服务接口
	ResultType_ERR_NO_Server       ResultType = 3  // 没有可用的grpc服务接口
	ResultType_ERR_Decode_Request  ResultType = 4  // 解析请求参数错误
	ResultType_ERR_Encode_Response ResultType = 5  // 编码返回信息错误
	ResultType_ERR_Call_Service    ResultType = 6  // 调用服务错误
	ResultType_ERR_Decode_Response ResultType = 7  // 解析返回信息错误
	ResultType_ERR_Encode_Request  ResultType = 8  // 编码请求信息错误
	ResultType_ERR_Service_Cal     ResultType = 9  // 服务计算错误(服务内部出错)
	ResultType_ERR_Service_Timeout ResultType = 10 // 服务计算超时
	ResultType_ERR_Grpc_Closed     ResultType = 11 // Grpc已经关闭
	ResultType_ERR_Rate_Limit      ResultType = 12 // 接口速率限制
)

// Enum value maps for ResultType.
var (
	ResultType_name = map[int32]string{
		0:  "OK",
		1:  "ERR_Unknown",
		2:  "ERR_Service_CMD",
		3:  "ERR_NO_Server",
		4:  "ERR_Decode_Request",
		5:  "ERR_Encode_Response",
		6:  "ERR_Call_Service",
		7:  "ERR_Decode_Response",
		8:  "ERR_Encode_Request",
		9:  "ERR_Service_Cal",
		10: "ERR_Service_Timeout",
		11: "ERR_Grpc_Closed",
		12: "ERR_Rate_Limit",
	}
	ResultType_value = map[string]int32{
		"OK":                  0,
		"ERR_Unknown":         1,
		"ERR_Service_CMD":     2,
		"ERR_NO_Server":       3,
		"ERR_Decode_Request":  4,
		"ERR_Encode_Response": 5,
		"ERR_Call_Service":    6,
		"ERR_Decode_Response": 7,
		"ERR_Encode_Request":  8,
		"ERR_Service_Cal":     9,
		"ERR_Service_Timeout": 10,
		"ERR_Grpc_Closed":     11,
		"ERR_Rate_Limit":      12,
	}
)

func (x ResultType) Enum() *ResultType {
	p := new(ResultType)
	*p = x
	return p
}

func (x ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[2].Descriptor()
}

func (ResultType) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[2]
}

func (x ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultType.Descriptor instead.
func (ResultType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

// 服务状态
type ServiceStatus int32

const (
	ServiceStatus_Unknown  ServiceStatus = 0
	ServiceStatus_Register ServiceStatus = 1
	ServiceStatus_Online   ServiceStatus = 2
	ServiceStatus_Offline  ServiceStatus = 3
)

// Enum value maps for ServiceStatus.
var (
	ServiceStatus_name = map[int32]string{
		0: "Unknown",
		1: "Register",
		2: "Online",
		3: "Offline",
	}
	ServiceStatus_value = map[string]int32{
		"Unknown":  0,
		"Register": 1,
		"Online":   2,
		"Offline":  3,
	}
)

func (x ServiceStatus) Enum() *ServiceStatus {
	p := new(ServiceStatus)
	*p = x
	return p
}

func (x ServiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[3].Descriptor()
}

func (ServiceStatus) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[3]
}

func (x ServiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatus.Descriptor instead.
func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{3}
}

// 连接模式
type ConnectMode int32

const (
	ConnectMode_GRPC ConnectMode = 0 // 默认GRPC
)

// Enum value maps for ConnectMode.
var (
	ConnectMode_name = map[int32]string{
		0: "GRPC",
	}
	ConnectMode_value = map[string]int32{
		"GRPC": 0,
	}
)

func (x ConnectMode) Enum() *ConnectMode {
	p := new(ConnectMode)
	*p = x
	return p
}

func (x ConnectMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[4].Descriptor()
}

func (ConnectMode) Type() protoreflect.EnumType {
	return &file_Common_proto_enumTypes[4]
}

func (x ConnectMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectMode.Descriptor instead.
func (ConnectMode) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{4}
}

// 统一服务调用请求
type UnifiedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     int32  `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Request []byte `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UnifiedRequest) Reset() {
	*x = UnifiedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnifiedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedRequest) ProtoMessage() {}

func (x *UnifiedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedRequest.ProtoReflect.Descriptor instead.
func (*UnifiedRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

func (x *UnifiedRequest) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *UnifiedRequest) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

// 统一服务调用返回
type UnifiedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd      int32  `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Result   int32  `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	Response []byte `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UnifiedResponse) Reset() {
	*x = UnifiedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnifiedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedResponse) ProtoMessage() {}

func (x *UnifiedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedResponse.ProtoReflect.Descriptor instead.
func (*UnifiedResponse) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

func (x *UnifiedResponse) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *UnifiedResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *UnifiedResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

// 依赖信息
type RelyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelyServiceType int32  `protobuf:"varint,1,opt,name=rely_service_type,json=relyServiceType,proto3" json:"rely_service_type,omitempty"` // 服务类型: ServiceType
	RelySemver      string `protobuf:"bytes,2,opt,name=rely_semver,json=relySemver,proto3" json:"rely_semver,omitempty"`                   // 依赖版本: Semver Major.Minor.Patch
}

func (x *RelyInfo) Reset() {
	*x = RelyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelyInfo) ProtoMessage() {}

func (x *RelyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelyInfo.ProtoReflect.Descriptor instead.
func (*RelyInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

func (x *RelyInfo) GetRelyServiceType() int32 {
	if x != nil {
		return x.RelyServiceType
	}
	return 0
}

func (x *RelyInfo) GetRelySemver() string {
	if x != nil {
		return x.RelySemver
	}
	return ""
}

// 服务信息
type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType   int32       `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`       // 服务类型: ServiceType
	Semver        string      `protobuf:"bytes,2,opt,name=semver,proto3" json:"semver,omitempty"`                                     // 服务版本: Semver Major.Minor.Patch
	Addr          string      `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`                                         // 服务地址: ip:port
	HostName      string      `protobuf:"bytes,4,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`                 // 主 机 名: algorithm-1
	Status        int32       `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                    // 服务状态: ServiceStatus
	RelyList      []*RelyInfo `protobuf:"bytes,6,rep,name=rely_list,json=relyList,proto3" json:"rely_list,omitempty"`                 // 依赖服务：依赖下级服务列表
	ServiceWeight int32       `protobuf:"varint,7,opt,name=service_weight,json=serviceWeight,proto3" json:"service_weight,omitempty"` // 服务权重: 机器CPU核数
	ConnectMode   int32       `protobuf:"varint,8,opt,name=connect_mode,json=connectMode,proto3" json:"connect_mode,omitempty"`       // 连接模式: ConnectMode
	GroupTab      string      `protobuf:"bytes,9,opt,name=group_tab,json=groupTab,proto3" json:"group_tab,omitempty"`                 // 分组标签: proc_default
	ServiceName   string      `protobuf:"bytes,10,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`       // 服务名称: AlgoCenter
	Nickname      string      `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`                                // 服务昵称: 算法中控
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInfo) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *ServiceInfo) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *ServiceInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ServiceInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ServiceInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceInfo) GetRelyList() []*RelyInfo {
	if x != nil {
		return x.RelyList
	}
	return nil
}

func (x *ServiceInfo) GetServiceWeight() int32 {
	if x != nil {
		return x.ServiceWeight
	}
	return 0
}

func (x *ServiceInfo) GetConnectMode() int32 {
	if x != nil {
		return x.ConnectMode
	}
	return 0
}

func (x *ServiceInfo) GetGroupTab() string {
	if x != nil {
		return x.GroupTab
	}
	return ""
}

func (x *ServiceInfo) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// 关注服务列表
type WatchServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType int32          `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceList []*ServiceInfo `protobuf:"bytes,2,rep,name=service_list,json=serviceList,proto3" json:"service_list,omitempty"`
}

func (x *WatchServiceInfo) Reset() {
	*x = WatchServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchServiceInfo) ProtoMessage() {}

func (x *WatchServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchServiceInfo.ProtoReflect.Descriptor instead.
func (*WatchServiceInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{4}
}

func (x *WatchServiceInfo) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *WatchServiceInfo) GetServiceList() []*ServiceInfo {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

// CMD_REGISTER
type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

type RegisterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchList []*WatchServiceInfo `protobuf:"bytes,1,rep,name=watch_list,json=watchList,proto3" json:"watch_list,omitempty"`
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterReply) GetWatchList() []*WatchServiceInfo {
	if x != nil {
		return x.WatchList
	}
	return nil
}

// CMD_ONLINE
type OnlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *OnlineRequest) Reset() {
	*x = OnlineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineRequest) ProtoMessage() {}

func (x *OnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineRequest.ProtoReflect.Descriptor instead.
func (*OnlineRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

type OnlineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchList []*WatchServiceInfo `protobuf:"bytes,1,rep,name=watch_list,json=watchList,proto3" json:"watch_list,omitempty"`
}

func (x *OnlineReply) Reset() {
	*x = OnlineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReply) ProtoMessage() {}

func (x *OnlineReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReply.ProtoReflect.Descriptor instead.
func (*OnlineReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{8}
}

func (x *OnlineReply) GetWatchList() []*WatchServiceInfo {
	if x != nil {
		return x.WatchList
	}
	return nil
}

// CMD_OFFLINE
type OfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *OfflineRequest) Reset() {
	*x = OfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRequest) ProtoMessage() {}

func (x *OfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRequest.ProtoReflect.Descriptor instead.
func (*OfflineRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{9}
}

func (x *OfflineRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

// CMD_PING
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{10}
}

func (x *PingRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

// CMD_CHECK
type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo        `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
	WatchList   []*WatchServiceInfo `protobuf:"bytes,2,rep,name=watch_list,json=watchList,proto3" json:"watch_list,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{11}
}

func (x *CheckRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

func (x *CheckRequest) GetWatchList() []*WatchServiceInfo {
	if x != nil {
		return x.WatchList
	}
	return nil
}

type CheckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WatchList []*WatchServiceInfo `protobuf:"bytes,1,rep,name=watch_list,json=watchList,proto3" json:"watch_list,omitempty"`
}

func (x *CheckReply) Reset() {
	*x = CheckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReply) ProtoMessage() {}

func (x *CheckReply) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReply.ProtoReflect.Descriptor instead.
func (*CheckReply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{12}
}

func (x *CheckReply) GetWatchList() []*WatchServiceInfo {
	if x != nil {
		return x.WatchList
	}
	return nil
}

// CMD_PING
type ReloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *ReloadRequest) Reset() {
	*x = ReloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadRequest) ProtoMessage() {}

func (x *ReloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadRequest.ProtoReflect.Descriptor instead.
func (*ReloadRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{13}
}

func (x *ReloadRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

// CMD_NOTIFY
type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceInfo *ServiceInfo `protobuf:"bytes,1,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyRequest) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

// 公用空返回消息结构
type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{15}
}

var File_Common_proto protoreflect.FileDescriptor

var file_Common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x55, 0x6e,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x57, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x65, 0x6c, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x79, 0x5f, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x6c, 0x79, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x22, 0xea, 0x02, 0x0a, 0x0b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31,
	0x0a, 0x09, 0x72, 0x65, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x65, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x61, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x4c, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b,
	0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x70, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x0f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x10, 0xf0, 0x2e, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x59, 0x10, 0xf8,
	0x46, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x47,
	0x4f, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x82, 0x47, 0x2a, 0xb8, 0x01, 0x0a, 0x07,
	0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4d, 0x44, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4d, 0x44, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x44, 0x5f, 0x4f,
	0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x14, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4d, 0x44, 0x5f, 0x4f,
	0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x1e, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4d, 0x44, 0x5f,
	0x50, 0x49, 0x4e, 0x47, 0x10, 0x28, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d, 0x44, 0x5f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x10, 0x32, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x44, 0x5f, 0x52, 0x45, 0x4c,
	0x4f, 0x41, 0x44, 0x10, 0x3c, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x44, 0x5f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x59, 0x10, 0x46, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d, 0x44, 0x5f, 0x48, 0x45, 0x4c,
	0x4c, 0x4f, 0x10, 0x64, 0x12, 0x20, 0x0a, 0x1a, 0x43, 0x4d, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45,
	0x4e, 0x44, 0x10, 0xe1, 0xb5, 0x37, 0x2a, 0x9c, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x43, 0x4d,
	0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x5f, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x5f, 0x43,
	0x61, 0x6c, 0x6c, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x06, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x52, 0x52, 0x5f, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x5f, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x08, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x43, 0x61,
	0x6c, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x52, 0x52, 0x5f, 0x47, 0x72, 0x70, 0x63, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10,
	0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x61, 0x74, 0x65, 0x5f, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x10, 0x0c, 0x2a, 0x43, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x2a, 0x17, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50,
	0x43, 0x10, 0x00, 0x32, 0x5a, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x6e,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x3b, 0x47, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Common_proto_rawDescOnce sync.Once
	file_Common_proto_rawDescData = file_Common_proto_rawDesc
)

func file_Common_proto_rawDescGZIP() []byte {
	file_Common_proto_rawDescOnce.Do(func() {
		file_Common_proto_rawDescData = protoimpl.X.CompressGZIP(file_Common_proto_rawDescData)
	})
	return file_Common_proto_rawDescData
}

var file_Common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_Common_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_Common_proto_goTypes = []interface{}{
	(ServiceType)(0),         // 0: GrpcProtos.ServiceType
	(CmdType)(0),             // 1: GrpcProtos.CmdType
	(ResultType)(0),          // 2: GrpcProtos.ResultType
	(ServiceStatus)(0),       // 3: GrpcProtos.ServiceStatus
	(ConnectMode)(0),         // 4: GrpcProtos.ConnectMode
	(*UnifiedRequest)(nil),   // 5: GrpcProtos.UnifiedRequest
	(*UnifiedResponse)(nil),  // 6: GrpcProtos.UnifiedResponse
	(*RelyInfo)(nil),         // 7: GrpcProtos.RelyInfo
	(*ServiceInfo)(nil),      // 8: GrpcProtos.ServiceInfo
	(*WatchServiceInfo)(nil), // 9: GrpcProtos.WatchServiceInfo
	(*RegisterRequest)(nil),  // 10: GrpcProtos.RegisterRequest
	(*RegisterReply)(nil),    // 11: GrpcProtos.RegisterReply
	(*OnlineRequest)(nil),    // 12: GrpcProtos.OnlineRequest
	(*OnlineReply)(nil),      // 13: GrpcProtos.OnlineReply
	(*OfflineRequest)(nil),   // 14: GrpcProtos.OfflineRequest
	(*PingRequest)(nil),      // 15: GrpcProtos.PingRequest
	(*CheckRequest)(nil),     // 16: GrpcProtos.CheckRequest
	(*CheckReply)(nil),       // 17: GrpcProtos.CheckReply
	(*ReloadRequest)(nil),    // 18: GrpcProtos.ReloadRequest
	(*NotifyRequest)(nil),    // 19: GrpcProtos.NotifyRequest
	(*EmptyResponse)(nil),    // 20: GrpcProtos.EmptyResponse
}
var file_Common_proto_depIdxs = []int32{
	7,  // 0: GrpcProtos.ServiceInfo.rely_list:type_name -> GrpcProtos.RelyInfo
	8,  // 1: GrpcProtos.WatchServiceInfo.service_list:type_name -> GrpcProtos.ServiceInfo
	8,  // 2: GrpcProtos.RegisterRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	9,  // 3: GrpcProtos.RegisterReply.watch_list:type_name -> GrpcProtos.WatchServiceInfo
	8,  // 4: GrpcProtos.OnlineRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	9,  // 5: GrpcProtos.OnlineReply.watch_list:type_name -> GrpcProtos.WatchServiceInfo
	8,  // 6: GrpcProtos.OfflineRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	8,  // 7: GrpcProtos.PingRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	8,  // 8: GrpcProtos.CheckRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	9,  // 9: GrpcProtos.CheckRequest.watch_list:type_name -> GrpcProtos.WatchServiceInfo
	9,  // 10: GrpcProtos.CheckReply.watch_list:type_name -> GrpcProtos.WatchServiceInfo
	8,  // 11: GrpcProtos.ReloadRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	8,  // 12: GrpcProtos.NotifyRequest.service_info:type_name -> GrpcProtos.ServiceInfo
	5,  // 13: GrpcProtos.UnifiedService.CallService:input_type -> GrpcProtos.UnifiedRequest
	6,  // 14: GrpcProtos.UnifiedService.CallService:output_type -> GrpcProtos.UnifiedResponse
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_Common_proto_init() }
func file_Common_proto_init() {
	if File_Common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnifiedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnifiedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Common_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Common_proto_goTypes,
		DependencyIndexes: file_Common_proto_depIdxs,
		EnumInfos:         file_Common_proto_enumTypes,
		MessageInfos:      file_Common_proto_msgTypes,
	}.Build()
	File_Common_proto = out.File
	file_Common_proto_rawDesc = nil
	file_Common_proto_goTypes = nil
	file_Common_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UnifiedServiceClient is the client API for UnifiedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnifiedServiceClient interface {
	CallService(ctx context.Context, in *UnifiedRequest, opts ...grpc.CallOption) (*UnifiedResponse, error)
}

type unifiedServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUnifiedServiceClient(cc grpc.ClientConnInterface) UnifiedServiceClient {
	return &unifiedServiceClient{cc}
}

func (c *unifiedServiceClient) CallService(ctx context.Context, in *UnifiedRequest, opts ...grpc.CallOption) (*UnifiedResponse, error) {
	out := new(UnifiedResponse)
	err := c.cc.Invoke(ctx, "/GrpcProtos.UnifiedService/CallService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnifiedServiceServer is the server API for UnifiedService service.
type UnifiedServiceServer interface {
	CallService(context.Context, *UnifiedRequest) (*UnifiedResponse, error)
}

// UnimplementedUnifiedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUnifiedServiceServer struct {
}

func (*UnimplementedUnifiedServiceServer) CallService(context.Context, *UnifiedRequest) (*UnifiedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallService not implemented")
}

func RegisterUnifiedServiceServer(s *grpc.Server, srv UnifiedServiceServer) {
	s.RegisterService(&_UnifiedService_serviceDesc, srv)
}

func _UnifiedService_CallService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnifiedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnifiedServiceServer).CallService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GrpcProtos.UnifiedService/CallService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnifiedServiceServer).CallService(ctx, req.(*UnifiedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UnifiedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GrpcProtos.UnifiedService",
	HandlerType: (*UnifiedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CallService",
			Handler:    _UnifiedService_CallService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Common.proto",
}
